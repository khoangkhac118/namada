name: Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-[a-z]+"

permissions:
  id-token: write
  contents: write

env:
  GIT_LFS_SKIP_SMUDGE: 1
  RUST_BACKTRACE: full
  CARGO_INCREMENTAL: 0

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-latest, windows-latest, ubuntu-22.04]
        namada_cache_version: [v1]
        make:
          - name: Build package
            command: package

    env:
      RUSTC_WRAPPER: sccache
      SCCACHE_REDIS: ${{ secrets.REDIS_CONN_STRING }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@4v3
        with:
          fetch-depth: 0
      - run: git fetch --tags --force origin # WA: https://github.com/actions/checkout/issues/882
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.3
      - name: Setup rust toolchain
        uses: oxidecomputer/actions-rs_toolchain@ad3f86084a8a5acf2c09cb691421b31cf8af7a36
        with:
          profile: minimal
          override: true
      - name: Cache cargo registry
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-namada-release-${{ matrix.namada_cache_version }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-namada-release-${{ matrix.namada_cache_version }}
      - name: Start sccache server
        run: sccache --start-server
      - name: Install cargo-about
        run: curl -k https://installer.heliax.click/EmbarkStudios/cargo-about@0.5.7! | bash
      - name: ${{ matrix.make.name }}
        run: make ${{ matrix.make.command }}
      - name: Upload binaries package
        uses: actions/upload-artifact@v3
        with:
          name: release-${{ matrix.os }}-${{ github.sha }}
          path: ./*.tar.gz
      - name: Print sccache stats
        if: always()
        run: sccache --show-stats || true
      - name: Stop sccache server
        if: always()
        run: sccache --stop-server || true

  release:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]

    steps:
      - id: get_version
        uses: battila7/get-version-action@v2
      - name: Download release artifacts
        uses: actions/download-artifact@v3
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: ./**/*.tar.gz
          tag_name: ${{ steps.get_version.outputs.version }}
          name: Namada ${{ steps.get_version.outputs.version-without-v }}
